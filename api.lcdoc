Library: community.livecode.paulmcclernan.macostools

Type: library

Summary: This Library is a collection of macOS Cocoa AppKit related LCB FFI wrappers.

Description:
A collection of macOS Cocoa AppKit related handlers

>*Note:* This library is MIT licensed (permissive).
> Please share and share a like.

version: 1.0.1

author: Paul McClernan


Name: FullScreenAllowed

Type: handler

Syntax: FullScreenAllowed(<windowID>,<isAllowed>)

Summary: Sets the mac native fullscreen attribute for a windowID passed to it.

Example: FullScreenAllowed the windowID of this stack, TRUE

Parameters: 

windowID: retrieved from a stack's windowID property.

isAllowed: If true then allow, if false don't allow.

Description:
This handler will set the mac native Full Screen behaviour on the windowID passed.
Depending on the OS version, this will either display an icon in the windowâ€™s
top-right corner, or change the maximize button to display double arrows.



Name: GetFrontmostApplication

Type: handler

Syntax: GetFrontmostApplication(<pReturnType>)

Summary: Returns information about the frontmost application.

Parameters: 

pReturnType: `ProcessID`, `Path`,`BundleID`, empty

Returns: Requested return type or a return delimited list




Name: IsFullScreenAllowed

Type: handler

Syntax: IsFullScreenAllowed(<windowID>)

Summary: Returns the mac native Full Screen behavior state of stack's window.

Example: if IsFullScreenAllowed(the windowID of this stack) then put "Ready to go mac native full screen."

Parameters: 

windowID: retrieved from a stack's windowID property.

Returns: The mac native Full Screen allowed state of a stack's window.

Description:
Geven the windowID of a stack this returns the mac native Full Screen behavior
state of the stack.



Name: PostUserNotification

Type: handler

Syntax: PostUserNotification(<postTitle>,<subTitle>,<informativeText>,<postIdentifier>,<soundName>)

Summary: Creates macOS notification center notes

Example: PostUserNotification "Download Completed", "freelibs.net", "Your download of macOS.lce is completed", "DLNote001", "sosumi"

Parameters: 

postTitle: title of the notification

subTitle: subtitle of the notification

informativeText: The body text of the notification

postIdentifier: identifier for a notification, usefull for overwriting

soundName:
name of a sound in the system
pass empty for no sound, pass "default" for default "ding" sound

Description:
Creates macOS notification center notes.
String values should be localized as it is presented to the user.
String values for postTitle and subTitle truncated to a length appropriate for
display and it's properties modified to reflect any truncations.
For soundName Pass empty for silent or pass any sound file in any of the OS
Library/Audio/Sounds folders, if no match is found a default alert sound is used.



Name: AppHide

Type: handler

Syntax: AppHide()

Summary: Hides the app sending it in the background and activates the next active app.

Example: AppHide

Description:
Hides the app, sending it in the background and activates the next active app.
This is the programatic equivelant to selcting Hide from the app's Dock menu.



Name: AppUnhide

Type: handler

Syntax: AppUnhide()

Summary: Unhides the app revealing any document windows that were hidden.

Example: AppUnhide

Description:
Unhides the app revealing any document windows that were hidden, but it does not
activate the app which remains in the background.



Name: setWindowToLightMode

Type: handler

Syntax: setWindowToLightMode(<pWindowID>)

Summary: Assign the macOS native "light mode" window style to a stack's window

Example: setWindowToLightMode the windowID of this stack

Parameters: 

windowID: retrieved from a stack's windowID property.

Description: This handler will set the macOS "light" appearance of the window passed.




Name: SetDockTileBadge

Type: handler

Syntax: SetDockTileBadge(<badgeText>)

Summary: Badge the App's Dock Icon with a small string of text.

Example: setDockTileBadge "Hello"

Parameters: 

badgeText: a small string of text to badge the app's dock icon with.

Description:
Badge the App's Dock Icon with a small string of text. If badgeText string is
too long it will be automatically truncated to fit.



Name: RequestUserAttention

Type: handler

Syntax: RequestUserAttention(<criticalRequest>)

Summary:
When the app is in the background, RequestUserAttention calls for user
attention by bouncy the App's icon in the Dock

Example:
do "tell application "& quote & "Finder.app" & quote & " to activate" as AppleScript
wait 1 second with messages
RequestUserAttention TRUE

Parameters: 

criticalRequest:
Set wether or not attention is immediately needed.
- TRUE: the user attention request is a critical request. The dock icon will
 continue to bounce until the application is brought forward.
- FALSE: the user attention request is an informational request.
 The dock icon will bounce once.

Description:
When the app is in the background <RequestUserAttention> will call for the users
attention by bouncy the App's icon in the Dock. If <criticalRequest> is false it will
bounce the icon only once, otherwise the icon will continue to bounce until
the app is the active foreground app.



Name: setWindowToDarkMode

Type: handler

Syntax: setWindowToDarkMode(<pWindowID>)

Summary: Assign the macOS native "dark mode" window style to a stack's window

Example: setWindowToDarkMode the windowID of this stack

Parameters: 

windowID: retrieved from a stack's windowID property.

Description: This handler will set the macOS dark appearance of the window passed.




Name: ToggleFullScreen

Type: handler

Syntax: ToggleFullScreen(<windowID>)

Summary: Toggle the mac native Full Screen state of a stack's window

Example: ToggleFullScreen the windowID of this stack

Parameters: 

windowID: retrieved from a stack's windowID property.

Description:
This handler will toggle the Full Screen state of the window passed.
The FullScreenAllowed must first be enabled for this to work (system requirement)



Name: MiniaturizeAll

Type: handler

Syntax: MiniaturizeAll()

Summary: Minimize all document windows (does not effect on modal dialogs or modeless palette windows)

Example: MiniaturizeAll

Description:
Minimize all document windows (does not effect on modal dialogs or modeless palette windows).
This is the programatic equivelant to option-clicking the yellow minimize button on the windowframe



